================================================================================
Command Line:
	train_classifier.py gridsearch rwe /mnt/data/RWE/ -t 0.80 -gt svm -gc 2 -gp {"kernel":["rbf","poly","linear","sigmoid"], "C":[0.1, 1, 10, 100, 1000, 10000, 100000]}
================================================================================
================================================================================
Loading data...
================================================================================
================================================================================
Feature Type: rwe
	Window Size: 256
	Data points: 1,024
Number of features: 1,024
================================================================================


================================================================================
Classifier Type: Grid Search (gridsearch)
================================================================================
Grid Search Enabled!
Grid Search Type: Support Vector Machine (svm)
Grid Search Parameters: {'kernel': ['rbf', 'poly', 'linear', 'sigmoid'], 'C': [0.1, 1, 10, 100, 1000, 10000, 100000]}
================================================================================
Training Class Count:
================================================================================
	Backdoor    2000
	Ransom      2000
	PUA         2000
	Trojan      2000
	Worm        2000
	Virus       2000
================================================================================
Testing Class Count:
================================================================================
	Ransom      8000
	Backdoor    8000
	Trojan      8000
	PUA         8000
	Worm        8000
	Virus       8000
================================================================================


================================================================================
Begin training...
================================================================================
Training time 648.379391 seconds
================================================================================


================================================================================
Best Score: 0.8785
================================================================================
CV Results:
{'mean_fit_time': array([80.28570926, 95.74728632, 55.85211003, 83.28456581, 52.53848517,
       63.85226536, 69.6108129 , 56.02147186, 47.07984734, 53.97120643,
       76.02047527, 50.29884136, 47.88489246, 53.81539965, 68.71454513,
       50.0000757 , 46.33368599, 46.47617865, 72.06667137, 48.98444259,
       47.61276031, 50.28355777, 73.55621028, 49.7645402 , 45.26343882,
       50.62474656, 60.1795752 , 41.69740474]), 'std_fit_time': array([2.00684941, 2.14259839, 0.05172288, 3.13775337, 1.17363203,
       0.57046556, 3.26848006, 0.67932379, 1.16451645, 0.28306723,
       0.43191087, 5.4591912 , 2.66715264, 0.60937643, 1.5839659 ,
       2.33233798, 5.81843102, 3.06597304, 1.13291073, 2.50949442,
       1.39158726, 0.55486476, 2.67866492, 0.20443773, 2.65443361,
       0.47531796, 1.5372963 , 0.51065242]), 'mean_score_time': array([59.39365506, 65.97452724, 38.23876274, 68.79078591, 46.18351352,
       48.34943306, 36.32975948, 57.5341655 , 39.06260657, 39.79704261,
       32.5412457 , 58.23336327, 40.52183211, 41.54685533, 35.4694463 ,
       59.32987821, 41.72081232, 34.53346837, 36.71980155, 55.20900047,
       39.55743718, 37.4225955 , 34.94818735, 47.90616322, 35.76256835,
       30.33377457, 22.65634239, 36.67173433]), 'std_score_time': array([6.08839869, 0.16281831, 1.08946168, 1.55427587, 1.1427356 ,
       3.22565448, 0.49984634, 3.1058954 , 6.32925582, 1.50549459,
       3.71905637, 4.11520326, 0.56305921, 3.01350343, 0.11126244,
       4.4452194 , 3.12832165, 0.75822437, 0.01050913, 2.20369542,
       0.19664145, 0.12116003, 1.71338987, 1.67747378, 0.17056334,
       0.85840487, 0.25260675, 2.75250769]), 'param_C': masked_array(data=[0.1, 0.1, 0.1, 0.1, 1, 1, 1, 1, 10, 10, 10, 10, 100,
                   100, 100, 100, 1000, 1000, 1000, 1000, 10000, 10000,
                   10000, 10000, 100000, 100000, 100000, 100000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'poly', 'linear', 'sigmoid', 'rbf', 'poly',
                   'linear', 'sigmoid', 'rbf', 'poly', 'linear',
                   'sigmoid', 'rbf', 'poly', 'linear', 'sigmoid', 'rbf',
                   'poly', 'linear', 'sigmoid', 'rbf', 'poly', 'linear',
                   'sigmoid', 'rbf', 'poly', 'linear', 'sigmoid'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'C': 0.1, 'kernel': 'rbf'}, {'C': 0.1, 'kernel': 'poly'}, {'C': 0.1, 'kernel': 'linear'}, {'C': 0.1, 'kernel': 'sigmoid'}, {'C': 1, 'kernel': 'rbf'}, {'C': 1, 'kernel': 'poly'}, {'C': 1, 'kernel': 'linear'}, {'C': 1, 'kernel': 'sigmoid'}, {'C': 10, 'kernel': 'rbf'}, {'C': 10, 'kernel': 'poly'}, {'C': 10, 'kernel': 'linear'}, {'C': 10, 'kernel': 'sigmoid'}, {'C': 100, 'kernel': 'rbf'}, {'C': 100, 'kernel': 'poly'}, {'C': 100, 'kernel': 'linear'}, {'C': 100, 'kernel': 'sigmoid'}, {'C': 1000, 'kernel': 'rbf'}, {'C': 1000, 'kernel': 'poly'}, {'C': 1000, 'kernel': 'linear'}, {'C': 1000, 'kernel': 'sigmoid'}, {'C': 10000, 'kernel': 'rbf'}, {'C': 10000, 'kernel': 'poly'}, {'C': 10000, 'kernel': 'linear'}, {'C': 10000, 'kernel': 'sigmoid'}, {'C': 100000, 'kernel': 'rbf'}, {'C': 100000, 'kernel': 'poly'}, {'C': 100000, 'kernel': 'linear'}, {'C': 100000, 'kernel': 'sigmoid'}], 'split0_test_score': array([0.71483333, 0.70516667, 0.77383333, 0.52916667, 0.84133333,
       0.78983333, 0.74933333, 0.498     , 0.8815    , 0.8405    ,
       0.74766667, 0.47383333, 0.8815    , 0.82583333, 0.74716667,
       0.45683333, 0.8805    , 0.821     , 0.74616667, 0.44433333,
       0.8795    , 0.8195    , 0.74416667, 0.43433333, 0.876     ,
       0.81883333, 0.73966667, 0.43266667]), 'split1_test_score': array([0.71783333, 0.6795    , 0.76383333, 0.52083333, 0.83683333,
       0.79133333, 0.75116667, 0.4615    , 0.87383333, 0.834     ,
       0.7465    , 0.43433333, 0.8755    , 0.82833333, 0.746     ,
       0.418     , 0.87583333, 0.826     , 0.745     , 0.40716667,
       0.87366667, 0.82433333, 0.7445    , 0.39016667, 0.87366667,
       0.82333333, 0.73983333, 0.388     ]), 'mean_test_score': array([0.71633333, 0.69233333, 0.76883333, 0.525     , 0.83908333,
       0.79058333, 0.75025   , 0.47975   , 0.87766667, 0.83725   ,
       0.74708333, 0.45408333, 0.8785    , 0.82708333, 0.74658333,
       0.43741667, 0.87816667, 0.8235    , 0.74558333, 0.42575   ,
       0.87658333, 0.82191667, 0.74433333, 0.41225   , 0.87483333,
       0.82108333, 0.73975   , 0.41033333]), 'std_test_score': array([1.50000000e-03, 1.28333333e-02, 5.00000000e-03, 4.16666667e-03,
       2.25000000e-03, 7.50000000e-04, 9.16666667e-04, 1.82500000e-02,
       3.83333333e-03, 3.25000000e-03, 5.83333333e-04, 1.97500000e-02,
       3.00000000e-03, 1.25000000e-03, 5.83333333e-04, 1.94166667e-02,
       2.33333333e-03, 2.50000000e-03, 5.83333333e-04, 1.85833333e-02,
       2.91666667e-03, 2.41666667e-03, 1.66666667e-04, 2.20833333e-02,
       1.16666667e-03, 2.25000000e-03, 8.33333333e-05, 2.23333333e-02]), 'rank_test_score': array([20, 21, 13, 22,  6, 12, 14, 23,  3,  7, 15, 24,  1,  8, 16, 25,  2,
        9, 17, 26,  4, 10, 18, 27,  5, 11, 19, 28], dtype=int32), 'split0_train_score': array([0.72616667, 0.73533333, 0.9635    , 0.54466667, 0.8935    ,
       0.86283333, 0.99666667, 0.49816667, 0.98533333, 0.966     ,
       0.99866667, 0.481     , 0.9975    , 0.99333333, 0.99883333,
       0.45883333, 0.99866667, 0.99866667, 0.999     , 0.44833333,
       0.99866667, 0.99866667, 0.99883333, 0.4355    , 0.99883333,
       0.99883333, 0.9875    , 0.43466667]), 'split1_train_score': array([0.74183333, 0.71233333, 0.96433333, 0.52216667, 0.8955    ,
       0.865     , 0.99566667, 0.46      , 0.9805    , 0.96516667,
       0.99766667, 0.43933333, 0.99666667, 0.9925    , 0.99816667,
       0.41716667, 0.99766667, 0.99766667, 0.99816667, 0.40883333,
       0.998     , 0.998     , 0.998     , 0.394     , 0.99816667,
       0.99816667, 0.985     , 0.39283333]), 'mean_train_score': array([0.734     , 0.72383333, 0.96391667, 0.53341667, 0.8945    ,
       0.86391667, 0.99616667, 0.47908333, 0.98291667, 0.96558333,
       0.99816667, 0.46016667, 0.99708333, 0.99291667, 0.9985    ,
       0.438     , 0.99816667, 0.99816667, 0.99858333, 0.42858333,
       0.99833333, 0.99833333, 0.99841667, 0.41475   , 0.9985    ,
       0.9985    , 0.98625   , 0.41375   ]), 'std_train_score': array([0.00783333, 0.0115    , 0.00041667, 0.01125   , 0.001     ,
       0.00108333, 0.0005    , 0.01908333, 0.00241667, 0.00041667,
       0.0005    , 0.02083333, 0.00041667, 0.00041667, 0.00033333,
       0.02083333, 0.0005    , 0.0005    , 0.00041667, 0.01975   ,
       0.00033333, 0.00033333, 0.00041667, 0.02075   , 0.00033333,
       0.00033333, 0.00125   , 0.02091667])}
================================================================================
Params:
[{'C': 0.1, 'kernel': 'rbf'}, {'C': 0.1, 'kernel': 'poly'}, {'C': 0.1, 'kernel': 'linear'}, {'C': 0.1, 'kernel': 'sigmoid'}, {'C': 1, 'kernel': 'rbf'}, {'C': 1, 'kernel': 'poly'}, {'C': 1, 'kernel': 'linear'}, {'C': 1, 'kernel': 'sigmoid'}, {'C': 10, 'kernel': 'rbf'}, {'C': 10, 'kernel': 'poly'}, {'C': 10, 'kernel': 'linear'}, {'C': 10, 'kernel': 'sigmoid'}, {'C': 100, 'kernel': 'rbf'}, {'C': 100, 'kernel': 'poly'}, {'C': 100, 'kernel': 'linear'}, {'C': 100, 'kernel': 'sigmoid'}, {'C': 1000, 'kernel': 'rbf'}, {'C': 1000, 'kernel': 'poly'}, {'C': 1000, 'kernel': 'linear'}, {'C': 1000, 'kernel': 'sigmoid'}, {'C': 10000, 'kernel': 'rbf'}, {'C': 10000, 'kernel': 'poly'}, {'C': 10000, 'kernel': 'linear'}, {'C': 10000, 'kernel': 'sigmoid'}, {'C': 100000, 'kernel': 'rbf'}, {'C': 100000, 'kernel': 'poly'}, {'C': 100000, 'kernel': 'linear'}, {'C': 100000, 'kernel': 'sigmoid'}]
================================================================================
Mean Test Score: [0.71633333 0.69233333 0.76883333 0.525      0.83908333 0.79058333
 0.75025    0.47975    0.87766667 0.83725    0.74708333 0.45408333
 0.8785     0.82708333 0.74658333 0.43741667 0.87816667 0.8235
 0.74558333 0.42575    0.87658333 0.82191667 0.74433333 0.41225
 0.87483333 0.82108333 0.73975    0.41033333]
================================================================================
Best Params: {'C': 100, 'kernel': 'rbf'}
================================================================================


