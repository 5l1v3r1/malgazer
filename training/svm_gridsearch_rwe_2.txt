================================================================================
Command Line:
	train_classifier.py gridsearch rwe /mnt/data/RWE/ -t 0.9 -gt svm -gc 2 -gp {"kernel":["rbf","poly","linear","sigmoid"], "C":[0.1, 1, 10, 100, 1000]}
================================================================================
================================================================================
Loading data...
================================================================================
================================================================================
Feature Type: rwe
	Window Size: 256
	Data points: 1,024
Number of features: 1,024
================================================================================


================================================================================
Classifier Type: Grid Search (gridsearch)
================================================================================
Grid Search Enabled!
Grid Search Type: Support Vector Machine (svm)
Grid Search Parameters: {'kernel': ['rbf', 'poly', 'linear', 'sigmoid'], 'C': [0.1, 1, 10, 100, 1000]}
================================================================================
Training Class Count:
================================================================================
	Virus       1000
	Trojan      1000
	Backdoor    1000
	Ransom      1000
	PUA         1000
	Worm        1000
================================================================================
Testing Class Count:
================================================================================
	Backdoor    9000
	Virus       9000
	Ransom      9000
	PUA         9000
	Trojan      9000
	Worm        9000
================================================================================


================================================================================
Begin training...
================================================================================
Training time 1187.845039 seconds
================================================================================


================================================================================
Best Score: 0.8536666666666667
================================================================================
CV Results:
{'mean_fit_time': array([29.88988352, 34.57711017, 19.79914272, 33.0029341 , 21.29593205,
       23.85366511, 20.51497364, 20.9237479 , 20.73713279, 20.98621142,
       20.63386309, 16.87332702, 20.56032562, 21.6549468 , 20.44823861,
       16.60204792, 20.57777488, 21.66381657, 20.31617212, 16.2716074 ]), 'std_fit_time': array([0.0267632 , 0.42281997, 0.1181246 , 0.48469436, 0.23062563,
       0.56279278, 0.04900026, 0.20834553, 0.09065151, 0.66360199,
       0.22221792, 0.41885352, 0.05717587, 0.17133927, 0.51332784,
       0.46610165, 0.05124223, 0.41926181, 0.33042789, 0.27816939]), 'mean_score_time': array([24.80899739, 22.40338302, 13.80821133, 23.67048764, 17.11569285,
       16.7530632 , 13.90376627, 20.25631797, 15.60339093, 14.66640377,
       13.80412734, 18.13222694, 15.15438485, 14.02355719, 13.83455372,
       18.01008236, 15.28470612, 13.85061347, 13.7520082 , 17.90197635]), 'std_score_time': array([0.06673717, 0.21560049, 0.15744257, 0.05084324, 0.30818272,
       0.24707675, 0.00934041, 0.46314085, 0.07935905, 0.22979832,
       0.04060137, 0.41135788, 0.06355   , 0.14776254, 0.02196646,
       0.47872198, 0.07194281, 0.16402614, 0.03978419, 0.43433332]), 'param_C': masked_array(data=[0.1, 0.1, 0.1, 0.1, 1, 1, 1, 1, 10, 10, 10, 10, 100,
                   100, 100, 100, 1000, 1000, 1000, 1000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'poly', 'linear', 'sigmoid', 'rbf', 'poly',
                   'linear', 'sigmoid', 'rbf', 'poly', 'linear',
                   'sigmoid', 'rbf', 'poly', 'linear', 'sigmoid', 'rbf',
                   'poly', 'linear', 'sigmoid'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'C': 0.1, 'kernel': 'rbf'}, {'C': 0.1, 'kernel': 'poly'}, {'C': 0.1, 'kernel': 'linear'}, {'C': 0.1, 'kernel': 'sigmoid'}, {'C': 1, 'kernel': 'rbf'}, {'C': 1, 'kernel': 'poly'}, {'C': 1, 'kernel': 'linear'}, {'C': 1, 'kernel': 'sigmoid'}, {'C': 10, 'kernel': 'rbf'}, {'C': 10, 'kernel': 'poly'}, {'C': 10, 'kernel': 'linear'}, {'C': 10, 'kernel': 'sigmoid'}, {'C': 100, 'kernel': 'rbf'}, {'C': 100, 'kernel': 'poly'}, {'C': 100, 'kernel': 'linear'}, {'C': 100, 'kernel': 'sigmoid'}, {'C': 1000, 'kernel': 'rbf'}, {'C': 1000, 'kernel': 'poly'}, {'C': 1000, 'kernel': 'linear'}, {'C': 1000, 'kernel': 'sigmoid'}], 'split0_test_score': array([0.661     , 0.62566667, 0.742     , 0.542     , 0.81566667,
       0.77233333, 0.73      , 0.48066667, 0.86133333, 0.807     ,
       0.72933333, 0.47666667, 0.86      , 0.79166667, 0.72566667,
       0.45866667, 0.859     , 0.79233333, 0.72233333, 0.44833333]), 'split1_test_score': array([0.64633333, 0.60566667, 0.72266667, 0.516     , 0.80733333,
       0.74      , 0.70333333, 0.47033333, 0.846     , 0.78566667,
       0.70166667, 0.48266667, 0.842     , 0.772     , 0.70233333,
       0.46433333, 0.83933333, 0.76066667, 0.69966667, 0.44633333]), 'mean_test_score': array([0.65366667, 0.61566667, 0.73233333, 0.529     , 0.8115    ,
       0.75616667, 0.71666667, 0.4755    , 0.85366667, 0.79633333,
       0.7155    , 0.47966667, 0.851     , 0.78183333, 0.714     ,
       0.4615    , 0.84916667, 0.7765    , 0.711     , 0.44733333]), 'std_test_score': array([0.00733333, 0.01      , 0.00966667, 0.013     , 0.00416667,
       0.01616667, 0.01333333, 0.00516667, 0.00766667, 0.01066667,
       0.01383333, 0.003     , 0.009     , 0.00983333, 0.01166667,
       0.00283333, 0.00983333, 0.01583333, 0.01133333, 0.001     ]), 'rank_test_score': array([14, 15,  9, 16,  4,  8, 10, 18,  1,  5, 11, 17,  2,  6, 12, 19,  3,
        7, 13, 20], dtype=int32), 'split0_train_score': array([0.66433333, 0.64133333, 0.98466667, 0.54266667, 0.87366667,
       0.84566667, 0.998     , 0.499     , 0.98333333, 0.96266667,
       0.998     , 0.49666667, 0.997     , 0.99633333, 0.99866667,
       0.482     , 0.998     , 0.998     , 0.999     , 0.47233333]), 'split1_train_score': array([0.67266667, 0.64233333, 0.98166667, 0.543     , 0.88766667,
       0.848     , 0.999     , 0.49033333, 0.98566667, 0.96233333,
       0.99933333, 0.503     , 0.999     , 0.99366667, 0.99933333,
       0.47733333, 0.99933333, 0.99933333, 0.99933333, 0.47066667]), 'mean_train_score': array([0.6685    , 0.64183333, 0.98316667, 0.54283333, 0.88066667,
       0.84683333, 0.9985    , 0.49466667, 0.9845    , 0.9625    ,
       0.99866667, 0.49983333, 0.998     , 0.995     , 0.999     ,
       0.47966667, 0.99866667, 0.99866667, 0.99916667, 0.4715    ]), 'std_train_score': array([0.00416667, 0.0005    , 0.0015    , 0.00016667, 0.007     ,
       0.00116667, 0.0005    , 0.00433333, 0.00116667, 0.00016667,
       0.00066667, 0.00316667, 0.001     , 0.00133333, 0.00033333,
       0.00233333, 0.00066667, 0.00066667, 0.00016667, 0.00083333])}
================================================================================
Params:
[{'C': 0.1, 'kernel': 'rbf'}, {'C': 0.1, 'kernel': 'poly'}, {'C': 0.1, 'kernel': 'linear'}, {'C': 0.1, 'kernel': 'sigmoid'}, {'C': 1, 'kernel': 'rbf'}, {'C': 1, 'kernel': 'poly'}, {'C': 1, 'kernel': 'linear'}, {'C': 1, 'kernel': 'sigmoid'}, {'C': 10, 'kernel': 'rbf'}, {'C': 10, 'kernel': 'poly'}, {'C': 10, 'kernel': 'linear'}, {'C': 10, 'kernel': 'sigmoid'}, {'C': 100, 'kernel': 'rbf'}, {'C': 100, 'kernel': 'poly'}, {'C': 100, 'kernel': 'linear'}, {'C': 100, 'kernel': 'sigmoid'}, {'C': 1000, 'kernel': 'rbf'}, {'C': 1000, 'kernel': 'poly'}, {'C': 1000, 'kernel': 'linear'}, {'C': 1000, 'kernel': 'sigmoid'}]
================================================================================
Mean Test Score: [0.65366667 0.61566667 0.73233333 0.529      0.8115     0.75616667
 0.71666667 0.4755     0.85366667 0.79633333 0.7155     0.47966667
 0.851      0.78183333 0.714      0.4615     0.84916667 0.7765
 0.711      0.44733333]
================================================================================
Best Params: {'C': 10, 'kernel': 'rbf'}
================================================================================


