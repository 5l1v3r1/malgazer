================================================================================
Command Line:
	train_classifier.py gridsearch gist /mnt/data/GIST/ -t 0.85 -gt svm -gc 2 -gp {"kernel":["rbf","poly","linear","sigmoid"], "C":[0.1, 1, 10, 100, 1000, 10000, 100000]}
================================================================================
================================================================================
Loading data...
================================================================================
================================================================================
Feature Type: gist
Number of features: 320
================================================================================


================================================================================
Classifier Type: Grid Search (gridsearch)
================================================================================
Grid Search Enabled!
Grid Search Type: Support Vector Machine (svm)
Grid Search Parameters: {'kernel': ['rbf', 'poly', 'linear', 'sigmoid'], 'C': [0.1, 1, 10, 100, 1000, 10000, 100000]}
================================================================================
Training Class Count:
================================================================================
	Backdoor    1500
	Ransom      1500
	Trojan      1500
	Worm        1500
	Virus       1500
	PUA         1500
================================================================================
Testing Class Count:
================================================================================
	Worm        8500
	Virus       8500
	PUA         8500
	Trojan      8500
	Backdoor    8500
	Ransom      8500
================================================================================


================================================================================
Begin training...
================================================================================
Training time 493.485190 seconds
================================================================================


================================================================================
Best Score: 0.8827777777777778
================================================================================
CV Results:
{'mean_fit_time': array([  8.59727621,  10.34164691,   6.30859232,  10.16457224,
         5.42890382,   6.28999782,  11.08867741,   7.03010583,
         4.42453492,   4.56268704,  32.58264744,   6.33928883,
         4.21713507,   4.55060339,  80.98964429,   6.34146631,
         4.22408164,   4.40704799, 125.63195896,   6.09757185,
         4.20476222,   4.45046675, 144.26731277,   6.07426167,
         4.1630069 ,   4.32010007,  85.58205569,   6.26090348]), 'std_fit_time': array([1.10461950e-01, 1.20389223e-01, 2.26339102e-01, 1.57892227e-01,
       9.86652374e-02, 5.77747822e-02, 6.64604425e-01, 1.03261471e-02,
       9.29096937e-02, 4.36130762e-02, 3.22380245e+00, 1.08738065e-01,
       5.88773489e-02, 6.03671074e-02, 1.18442388e+01, 3.40521693e-01,
       1.42712951e-01, 2.76539326e-02, 4.73239264e+01, 3.27858448e-01,
       6.71198368e-02, 1.43718600e-01, 7.03238833e+01, 2.66701937e-01,
       2.06488252e-01, 3.73563766e-02, 2.54199518e+01, 2.31089473e-01]), 'mean_score_time': array([6.9848938 , 7.0471673 , 4.18536949, 8.29194176, 4.81837106,
       4.49046433, 3.47784984, 6.99391556, 4.01498914, 3.49410009,
       3.2073741 , 6.56101811, 3.77155364, 3.36083031, 3.14693081,
       6.72328055, 3.84450209, 3.19127131, 3.14736211, 6.63702631,
       3.94554889, 3.32716417, 2.98514342, 6.605147  , 3.91531408,
       3.24054193, 3.0874747 , 6.63147283]), 'std_score_time': array([0.14873695, 0.13100505, 0.12184358, 0.07844746, 0.10916114,
       0.03009546, 0.13331831, 0.03884888, 0.09048438, 0.04117012,
       0.11460328, 0.07424581, 0.08002388, 0.08730412, 0.02396834,
       0.1477896 , 0.02576506, 0.07079101, 0.00487053, 0.02997351,
       0.10878813, 0.0871315 , 0.05901241, 0.02774823, 0.03077233,
       0.10647416, 0.01787841, 0.04023051]), 'param_C': masked_array(data=[0.1, 0.1, 0.1, 0.1, 1, 1, 1, 1, 10, 10, 10, 10, 100,
                   100, 100, 100, 1000, 1000, 1000, 1000, 10000, 10000,
                   10000, 10000, 100000, 100000, 100000, 100000],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_kernel': masked_array(data=['rbf', 'poly', 'linear', 'sigmoid', 'rbf', 'poly',
                   'linear', 'sigmoid', 'rbf', 'poly', 'linear',
                   'sigmoid', 'rbf', 'poly', 'linear', 'sigmoid', 'rbf',
                   'poly', 'linear', 'sigmoid', 'rbf', 'poly', 'linear',
                   'sigmoid', 'rbf', 'poly', 'linear', 'sigmoid'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'C': 0.1, 'kernel': 'rbf'}, {'C': 0.1, 'kernel': 'poly'}, {'C': 0.1, 'kernel': 'linear'}, {'C': 0.1, 'kernel': 'sigmoid'}, {'C': 1, 'kernel': 'rbf'}, {'C': 1, 'kernel': 'poly'}, {'C': 1, 'kernel': 'linear'}, {'C': 1, 'kernel': 'sigmoid'}, {'C': 10, 'kernel': 'rbf'}, {'C': 10, 'kernel': 'poly'}, {'C': 10, 'kernel': 'linear'}, {'C': 10, 'kernel': 'sigmoid'}, {'C': 100, 'kernel': 'rbf'}, {'C': 100, 'kernel': 'poly'}, {'C': 100, 'kernel': 'linear'}, {'C': 100, 'kernel': 'sigmoid'}, {'C': 1000, 'kernel': 'rbf'}, {'C': 1000, 'kernel': 'poly'}, {'C': 1000, 'kernel': 'linear'}, {'C': 1000, 'kernel': 'sigmoid'}, {'C': 10000, 'kernel': 'rbf'}, {'C': 10000, 'kernel': 'poly'}, {'C': 10000, 'kernel': 'linear'}, {'C': 10000, 'kernel': 'sigmoid'}, {'C': 100000, 'kernel': 'rbf'}, {'C': 100000, 'kernel': 'poly'}, {'C': 100000, 'kernel': 'linear'}, {'C': 100000, 'kernel': 'sigmoid'}], 'split0_test_score': array([0.68866667, 0.638     , 0.78177778, 0.426     , 0.82022222,
       0.78088889, 0.78777778, 0.41422222, 0.87222222, 0.85422222,
       0.78733333, 0.39577778, 0.87733333, 0.85244444, 0.77911111,
       0.39777778, 0.87888889, 0.84555556, 0.77844444, 0.37355556,
       0.87822222, 0.84577778, 0.77755556, 0.36577778, 0.87711111,
       0.84555556, 0.77511111, 0.36377778]), 'split1_test_score': array([0.704     , 0.64622222, 0.788     , 0.43066667, 0.83133333,
       0.776     , 0.79444444, 0.39377778, 0.88288889, 0.85777778,
       0.78511111, 0.382     , 0.88533333, 0.86266667, 0.77733333,
       0.39177778, 0.88666667, 0.86044444, 0.77866667, 0.37888889,
       0.88488889, 0.85911111, 0.77911111, 0.37711111, 0.88133333,
       0.85777778, 0.77577778, 0.37711111]), 'mean_test_score': array([0.69633333, 0.64211111, 0.78488889, 0.42833333, 0.82577778,
       0.77844444, 0.79111111, 0.404     , 0.87755556, 0.856     ,
       0.78622222, 0.38888889, 0.88133333, 0.85755556, 0.77822222,
       0.39477778, 0.88277778, 0.853     , 0.77855556, 0.37622222,
       0.88155556, 0.85244444, 0.77833333, 0.37144444, 0.87922222,
       0.85166667, 0.77544444, 0.37044444]), 'std_test_score': array([0.00766667, 0.00411111, 0.00311111, 0.00233333, 0.00555556,
       0.00244444, 0.00333333, 0.01022222, 0.00533333, 0.00177778,
       0.00111111, 0.00688889, 0.004     , 0.00511111, 0.00088889,
       0.003     , 0.00388889, 0.00744444, 0.00011111, 0.00266667,
       0.00333333, 0.00666667, 0.00077778, 0.00566667, 0.00211111,
       0.00611111, 0.00033333, 0.00666667]), 'rank_test_score': array([20, 21, 14, 22, 11, 16, 12, 23,  5,  7, 13, 25,  3,  6, 18, 24,  1,
        8, 15, 26,  2,  9, 17, 27,  4, 10, 19, 28], dtype=int32), 'split0_train_score': array([0.71222222, 0.66533333, 0.86622222, 0.42288889, 0.87288889,
       0.82955556, 0.93911111, 0.43177778, 0.96777778, 0.95422222,
       0.98088889, 0.40333333, 0.99822222, 0.99866667, 0.99866667,
       0.41111111, 0.99933333, 0.99933333, 0.99933333, 0.38755556,
       0.99933333, 0.99933333, 0.99933333, 0.37888889, 0.99933333,
       0.99933333, 0.99955556, 0.37666667]), 'split1_train_score': array([0.70711111, 0.658     , 0.862     , 0.43511111, 0.86711111,
       0.81688889, 0.924     , 0.39488889, 0.96333333, 0.94511111,
       0.97333333, 0.38022222, 0.994     , 0.99577778, 0.99333333,
       0.39      , 0.99711111, 0.99755556, 0.99733333, 0.37933333,
       0.99777778, 0.99755556, 0.99777778, 0.37755556, 0.99777778,
       0.99777778, 0.99777778, 0.37755556]), 'mean_train_score': array([0.70966667, 0.66166667, 0.86411111, 0.429     , 0.87      ,
       0.82322222, 0.93155556, 0.41333333, 0.96555556, 0.94966667,
       0.97711111, 0.39177778, 0.99611111, 0.99722222, 0.996     ,
       0.40055556, 0.99822222, 0.99844444, 0.99833333, 0.38344444,
       0.99855556, 0.99844444, 0.99855556, 0.37822222, 0.99855556,
       0.99855556, 0.99866667, 0.37711111]), 'std_train_score': array([0.00255556, 0.00366667, 0.00211111, 0.00611111, 0.00288889,
       0.00633333, 0.00755556, 0.01844444, 0.00222222, 0.00455556,
       0.00377778, 0.01155556, 0.00211111, 0.00144444, 0.00266667,
       0.01055556, 0.00111111, 0.00088889, 0.001     , 0.00411111,
       0.00077778, 0.00088889, 0.00077778, 0.00066667, 0.00077778,
       0.00077778, 0.00088889, 0.00044444])}
================================================================================
Params:
[{'C': 0.1, 'kernel': 'rbf'}, {'C': 0.1, 'kernel': 'poly'}, {'C': 0.1, 'kernel': 'linear'}, {'C': 0.1, 'kernel': 'sigmoid'}, {'C': 1, 'kernel': 'rbf'}, {'C': 1, 'kernel': 'poly'}, {'C': 1, 'kernel': 'linear'}, {'C': 1, 'kernel': 'sigmoid'}, {'C': 10, 'kernel': 'rbf'}, {'C': 10, 'kernel': 'poly'}, {'C': 10, 'kernel': 'linear'}, {'C': 10, 'kernel': 'sigmoid'}, {'C': 100, 'kernel': 'rbf'}, {'C': 100, 'kernel': 'poly'}, {'C': 100, 'kernel': 'linear'}, {'C': 100, 'kernel': 'sigmoid'}, {'C': 1000, 'kernel': 'rbf'}, {'C': 1000, 'kernel': 'poly'}, {'C': 1000, 'kernel': 'linear'}, {'C': 1000, 'kernel': 'sigmoid'}, {'C': 10000, 'kernel': 'rbf'}, {'C': 10000, 'kernel': 'poly'}, {'C': 10000, 'kernel': 'linear'}, {'C': 10000, 'kernel': 'sigmoid'}, {'C': 100000, 'kernel': 'rbf'}, {'C': 100000, 'kernel': 'poly'}, {'C': 100000, 'kernel': 'linear'}, {'C': 100000, 'kernel': 'sigmoid'}]
================================================================================
Mean Test Score: [0.69633333 0.64211111 0.78488889 0.42833333 0.82577778 0.77844444
 0.79111111 0.404      0.87755556 0.856      0.78622222 0.38888889
 0.88133333 0.85755556 0.77822222 0.39477778 0.88277778 0.853
 0.77855556 0.37622222 0.88155556 0.85244444 0.77833333 0.37144444
 0.87922222 0.85166667 0.77544444 0.37044444]
================================================================================
Best Params: {'C': 1000, 'kernel': 'rbf'}
================================================================================


