Using TensorFlow backend.
================================================================================
Command Line:
	train_classifier.py gridsearch gist /mnt/data/GIST/ -t 0.80 -gt svm -gc 2 -gp {"kernel":["rbf"], "C":[0.1, 1, 10, 100, 1000, 10000, 100000]}
================================================================================
================================================================================
Loading data...
================================================================================
================================================================================
Feature Type: gist
Number of features: 320
================================================================================
/home/ubuntu/.local/lib/python3.5/site-packages/sklearn/preprocessing/label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.
  if diff:
/home/ubuntu/.local/lib/python3.5/site-packages/sklearn/preprocessing/label.py:151: DeprecationWarning: The truth value of an empty array is ambiguous. Returning False, but in future this will result in an error. Use `array.size > 0` to check that an array is not empty.
  if diff:


================================================================================
Classifier Type: Grid Search (gridsearch)
================================================================================
Grid Search Enabled!
Grid Search Type: Support Vector Machine (svm)
Grid Search Parameters: {'C': [0.1, 1, 10, 100, 1000, 10000, 100000], 'kernel': ['rbf']}
================================================================================
Training Class Count:
================================================================================
	Virus       2000
	Backdoor    2000
	Ransom      2000
	Trojan      2000
	PUA         2000
	Worm        2000
================================================================================
Testing Class Count:
================================================================================
	Backdoor    8000
	Ransom      8000
	Trojan      8000
	Worm        8000
	PUA         8000
	Virus       8000
================================================================================


================================================================================
Begin training...
================================================================================
Training time 116.134813 seconds
================================================================================


================================================================================
Best Score: 0.8851666666666667
================================================================================
CV Results:
{'mean_fit_time': array([43.49772632, 27.94083297, 22.13729894, 21.15066063, 20.56608295,
       21.3587054 , 20.63334906]), 'params': [{'C': 0.1, 'kernel': 'rbf'}, {'C': 1, 'kernel': 'rbf'}, {'C': 10, 'kernel': 'rbf'}, {'C': 100, 'kernel': 'rbf'}, {'C': 1000, 'kernel': 'rbf'}, {'C': 10000, 'kernel': 'rbf'}, {'C': 100000, 'kernel': 'rbf'}], 'split1_test_score': array([0.71516667, 0.8395    , 0.88066667, 0.8845    , 0.88483333,
       0.88066667, 0.87833333]), 'mean_score_time': array([21.3670913 , 20.07195079, 16.36795115, 15.82778847, 15.30545807,
       15.51971889, 15.39505136]), 'param_C': masked_array(data=[0.1, 1, 10, 100, 1000, 10000, 100000],
             mask=[False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'std_score_time': array([0.35750616, 0.01332033, 0.18473148, 0.04694951, 0.63276362,
       0.03303289, 0.01041424]), 'split0_train_score': array([0.71983333, 0.87216667, 0.96183333, 0.997     , 0.9985    ,
       0.9985    , 0.9985    ]), 'std_train_score': array([0.00083333, 0.00275   , 0.001     , 0.00141667, 0.00075   ,
       0.00041667, 0.00041667]), 'split0_test_score': array([0.71133333, 0.83666667, 0.88166667, 0.88483333, 0.8855    ,
       0.88583333, 0.88766667]), 'std_test_score': array([0.00191667, 0.00141667, 0.0005    , 0.00016667, 0.00033333,
       0.00258333, 0.00466667]), 'split1_train_score': array([0.7215    , 0.87766667, 0.95983333, 0.99416667, 0.997     ,
       0.99766667, 0.99766667]), 'mean_train_score': array([0.72066667, 0.87491667, 0.96083333, 0.99558333, 0.99775   ,
       0.99808333, 0.99808333]), 'rank_test_score': array([7, 6, 5, 2, 1, 3, 4], dtype=int32), 'std_fit_time': array([0.28842032, 1.39828598, 0.09211719, 0.05886257, 0.08028364,
       0.92953813, 0.20092785]), 'param_kernel': masked_array(data=['rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf', 'rbf'],
             mask=[False, False, False, False, False, False, False],
       fill_value='?',
            dtype=object), 'mean_test_score': array([0.71325   , 0.83808333, 0.88116667, 0.88466667, 0.88516667,
       0.88325   , 0.883     ])}
================================================================================
Params:
[{'C': 0.1, 'kernel': 'rbf'}, {'C': 1, 'kernel': 'rbf'}, {'C': 10, 'kernel': 'rbf'}, {'C': 100, 'kernel': 'rbf'}, {'C': 1000, 'kernel': 'rbf'}, {'C': 10000, 'kernel': 'rbf'}, {'C': 100000, 'kernel': 'rbf'}]
================================================================================
Mean Test Score: [0.71325    0.83808333 0.88116667 0.88466667 0.88516667 0.88325
 0.883     ]
================================================================================
Best Params: {'C': 1000, 'kernel': 'rbf'}
================================================================================


