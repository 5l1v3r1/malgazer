================================================================================
Command Line:
	train_classifier.py gridsearch gist /mnt/data/GIST/ -gt nc -gc 2 -gp {"shrink_threshold":[0, 1, 5, 10, 50]}
================================================================================
================================================================================
Loading data...
================================================================================
================================================================================
Feature Type: gist
Number of features: 320
================================================================================


================================================================================
Classifier Type: Grid Search (gridsearch)
================================================================================
Grid Search Enabled!
Grid Search Type: Nearest Centroid (nc)
Grid Search Parameters: {'shrink_threshold': [0, 1, 5, 10, 50]}
================================================================================
Training Class Count:
================================================================================
	PUA         10000
	Backdoor    10000
	Worm        10000
	Ransom      10000
	Virus       10000
	Trojan      10000
================================================================================
Testing Class Count:
================================================================================
	PUA         10000
	Backdoor    10000
	Worm        10000
	Ransom      10000
	Virus       10000
	Trojan      10000
================================================================================


================================================================================
Begin training...
================================================================================
Training time 11.919986 seconds
================================================================================


================================================================================
Best Score: 0.4789833333333333
================================================================================
CV Results:
{'mean_fit_time': array([0.64977634, 1.25598609, 1.3271178 , 1.36719978, 1.1929307 ]), 'std_fit_time': array([0.06554711, 0.00486195, 0.00857198, 0.0209552 , 0.07822466]), 'mean_score_time': array([0.49516952, 0.50369668, 0.5295428 , 0.53487265, 0.42419958]), 'std_score_time': array([0.01484239, 0.01908994, 0.00851882, 0.00456154, 0.03573298]), 'param_shrink_threshold': masked_array(data=[0, 1, 5, 10, 50],
             mask=[False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'shrink_threshold': 0}, {'shrink_threshold': 1}, {'shrink_threshold': 5}, {'shrink_threshold': 10}, {'shrink_threshold': 50}], 'split0_test_score': array([0.47273333, 0.4776    , 0.47996667, 0.44313333, 0.16666667]), 'split1_test_score': array([0.48013333, 0.48036667, 0.40396667, 0.43473333, 0.16666667]), 'mean_test_score': array([0.47643333, 0.47898333, 0.44196667, 0.43893333, 0.16666667]), 'std_test_score': array([0.0037    , 0.00138333, 0.038     , 0.0042    , 0.        ]), 'rank_test_score': array([2, 1, 3, 4, 5], dtype=int32), 'split0_train_score': array([0.47223333, 0.4771    , 0.47853333, 0.4427    , 0.16666667]), 'split1_train_score': array([0.4818    , 0.482     , 0.4074    , 0.43366667, 0.16666667]), 'mean_train_score': array([0.47701667, 0.47955   , 0.44296667, 0.43818333, 0.16666667]), 'std_train_score': array([0.00478333, 0.00245   , 0.03556667, 0.00451667, 0.        ])}
================================================================================
Params:
[{'shrink_threshold': 0}, {'shrink_threshold': 1}, {'shrink_threshold': 5}, {'shrink_threshold': 10}, {'shrink_threshold': 50}]
================================================================================
Mean Test Score: [0.47643333 0.47898333 0.44196667 0.43893333 0.16666667]
================================================================================
Best Params: {'shrink_threshold': 1}
================================================================================


